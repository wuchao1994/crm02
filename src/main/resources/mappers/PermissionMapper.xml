<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxxx.crm.mapper.PermissionMapper">
    <resultMap id="BaseResultMap" type="com.xxxx.crm.vo.Permission">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="role_id" jdbcType="INTEGER" property="roleId"/>
        <result column="module_id" jdbcType="INTEGER" property="moduleId"/>
        <result column="acl_value" jdbcType="VARCHAR" property="aclValue"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="update_date" jdbcType="TIMESTAMP" property="updateDate"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, role_id, module_id, acl_value, create_date, update_date
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_permission
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from t_permission
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="com.xxxx.crm.vo.Permission">
        insert into t_permission (id, role_id, module_id,
                                  acl_value, create_date, update_date)
        values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{moduleId,jdbcType=INTEGER},
                #{aclValue,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.xxxx.crm.vo.Permission">
        insert into t_permission
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="moduleId != null">
                module_id,
            </if>
            <if test="aclValue != null">
                acl_value,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="updateDate != null">
                update_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="moduleId != null">
                #{moduleId,jdbcType=INTEGER},
            </if>
            <if test="aclValue != null">
                #{aclValue,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.xxxx.crm.vo.Permission">
        update t_permission
        <set>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=INTEGER},
            </if>
            <if test="moduleId != null">
                module_id = #{moduleId,jdbcType=INTEGER},
            </if>
            <if test="aclValue != null">
                acl_value = #{aclValue,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xxxx.crm.vo.Permission">
        update t_permission
        set role_id     = #{roleId,jdbcType=INTEGER},
            module_id   = #{moduleId,jdbcType=INTEGER},
            acl_value   = #{aclValue,jdbcType=VARCHAR},
            create_date = #{createDate,jdbcType=TIMESTAMP},
            update_date = #{updateDate,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>


    <!--/*根据角色id,查询资源的数量集合*/-->
    <select id="countPermissionByRoleId" parameterType="int" resultType="java.lang.Integer">
        select count(1)
        from t_permission
        where role_id = #{roleId}
    </select>

    <!--根据roleId删除其所有的权限信息-->
    <delete id="deletePermissionByRoleId" parameterType="int">
        delete
        from t_permission
        where role_id = #{roleId}
    </delete>
    <!--批量添加权限
      insert into t_user (id,name) values(),(),();
    -->
    <insert id="insertBatch" parameterType="list">
        insert into t_permission (role_id, module_id, acl_value, create_date, update_date )
        <foreach collection="list" open="values" separator="," item="p">
            (#{p.roleId},#{p.moduleId},#{p.aclValue},#{p.createDate},#{p.updateDate})
        </foreach>
    </insert>
    <!--角色拥有的资源-->
    <select id="queryModuleByRoleId" resultType="java.lang.Integer">
        select module_id
        from t_permission
        where role_id = #{roleId}
    </select>

    <!--查询用户的权限码-->
    <select id="queryPermissionByUserId" resultType="java.lang.String">
        SELECT DISTINCT
            acl_value
        FROM
            t_permission AS p
                LEFT JOIN t_user_role AS ur ON ur.role_id = p.role_id
        WHERE
            ur.user_id=#{userId}
    </select>
</mapper>